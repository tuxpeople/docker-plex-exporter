name: "Build & Release"

# This worflow needs those secrets:
#
# DOCKERPASSWORD = Docker Hub token

on:
  schedule:
    - cron: '3 3 * * *'
  push:
    branches:
      - 'master'
      - 'main'

env:
  PLATFORMS: "linux/amd64,linux/arm/v7,linux/arm64"     # Build for which platforms
  DOCKER_USER: "tdeutsch"                               # Which user to use to login to DockerHub
  REPOSITORY: othalla/plex_exporter

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          repository: ${{ env.REPOSITORY }}
      -
        name: Generate Build-Args
        id: build-args
        run: |
          # echo ::set-output name=build-arg1::"buildarg1"
          # echo ::set-output name=build-arg2::"buildarg2"
      - 
        name: Prepare
        id: prep
        run: |
          IMAGENAME=$(echo ${{ github.repository }} | sed 's/${{ github.repository_owner }}\/docker-//g')
          IMAGEPREFIX="ghcr.io/${{ github.repository_owner }}"
          IMAGE="${IMAGEPREFIX}/${IMAGENAME}"
          echo ::set-output name=tags::${IMAGE}:latest
          echo ::set-output name=imagename::${IMAGENAME}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      # -
      #   name: Hadolint
      #   uses: brpaz/hadolint-action@v1.5.0
      #   with: 
      #     dockerfile: Dockerfile
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GHCR
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            ${{ steps.build-args.outputs.build-arg1 }}
            ${{ steps.build-args.outputs.build-arg2 }}
          labels: |
            org.opencontainers.image.title=${{ steps.prep.outputs.imagename }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
      -
        name: Copy to Docker Hub
        id: copy_images
        run: |
          for i in $(echo ${{ steps.prep.outputs.tags }} | sed "s/,/ /g")
          do
              GHTAG=$(echo $i | sed "s/ghcr.io/docker.io/g" | sed "s/${{ github.repository_owner }}/${{ env.DOCKER_USER }}/g")
              skopeo copy --all --src-creds=${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }} --dest-creds=${{ env.DOCKER_USER }}:${{ secrets.DOCKERPASSWORD }} docker://${i} docker://${GHTAG}
          done
      -
        name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v2.4.3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKERPASSWORD }}
          repository: "${{ env.DOCKER_USER }}/${{ steps.prep.outputs.imagename }}"
          short-description: ${{ github.event.repository.description }}
